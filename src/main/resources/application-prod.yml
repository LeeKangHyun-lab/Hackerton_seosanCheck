server:
  port: ${PORT:8080}
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  # --- 데이터베이스 설정 ---
  datasource:
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASS}

    # driver-class-name: org.postgresql.Driver

  # --- 💡 캐싱 기능을 위한 JPA 설정 ---
  jpa:
    hibernate:
      # 앱 실행 시 DB 테이블을 자동으로 업데이트 (없으면 생성)
      ddl-auto: create
    # 실행되는 SQL 쿼리를 로그로 보여줘서 디버깅에 유용합니다.
    show-sql: true
    # 로컬 MySQL 환경에 맞는 설정을 명시해줍니다.
    database-platform: org.hibernate.dialect.MySQLDialect

  session:
    store-type: jdbc
    jdbc:
      initialize-schema: never
      # --- 로컬(MySQL) 환경에서 사용할 설정 ---
      database-platform: mysql

      # --- 배포(PostgreSQL) 환경에서 사용할 설정 (주석 처리) ---
      # database-platform: postgresql

mybatis:
  configuration:
    map-underscore-to-camel-case: true

logging:
  level:
    org.mybatis: DEBUG
    hackerton.seosancheck.mapper: DEBUG

jwt:
  secret: ${JWT_SECRET}
  access-expiry: 900000      # 15분
  refresh-expiry: 1209600000 # 14일

openai:
  api-key: ${OPENAI_API_KEY}

weather:
  api:
    key: ${WEATHER_API_KEY}
